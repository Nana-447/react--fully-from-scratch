{"ast":null,"code":"import CartActionTypes from './cart.types.js';\nimport { addItemToCart, removeItemFromCart } from './cart.utils'; // These states will be used on rendering components and on selectors\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden // inverse\n\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter( // filter gives us back a new array filtered\n        cartItem => cartItem.id !== action.payload.id // if the cartItem id is not equal to the cartItem.id from the payload, then it will keep it (because of the filter function)\n        )\n      };\n\n    case CartActionTypes.CLEAR_CART:\n      return { ...state,\n        cartItems: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["D:/Repositorios/React--Zero-To-Mastery/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id","CLEAR_CART"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,iBAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD,C,CAEA;;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,eAAe,CAACU,kBAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH,MAFZ,CAEmB;;AAFnB,OAAP;;AAIJ,SAAKJ,eAAe,CAACW,QAArB;AACI,aAAM,EACF,GAAGJ,KADD;AAEFF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFtB,OAAN;;AAIJ,SAAKZ,eAAe,CAACa,WAArB;AACI,aAAM,EACF,GAAGN,KADD;AAEFF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF3B,OAAN;;AAIJ,SAAKZ,eAAe,CAACc,oBAArB;AACI,aAAM,EACF,GAAGP,KADD;AAEFF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,EAAwB;AAC/BC,QAAAA,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACI,OAAP,CAAeK,EADpC,CACuC;AADvC;AAFT,OAAN;;AAMJ,SAAKjB,eAAe,CAACkB,UAArB;AACI,aAAM,EACF,GAAGX,KADD;AAEFF,QAAAA,SAAS,EAAE;AAFT,OAAN;;AAIJ;AACI,aAAOE,KAAP;AA7BR;AA+BH,CAhCD;;AAkCA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types.js';\r\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\r\n\r\n// These states will be used on rendering components and on selectors\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    cartItems: []\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\r\n            return {\r\n                ...state,\r\n                hidden: !state.hidden // inverse\r\n            }\r\n        case CartActionTypes.ADD_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: addItemToCart(state.cartItems, action.payload)\r\n            }\r\n        case CartActionTypes.REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: removeItemFromCart(state.cartItems, action.payload)\r\n            }\r\n        case CartActionTypes.CLEAR_ITEM_FROM_CART:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter( // filter gives us back a new array filtered\r\n                    cartItem => cartItem.id !== action.payload.id // if the cartItem id is not equal to the cartItem.id from the payload, then it will keep it (because of the filter function)\r\n                )\r\n            }\r\n        case CartActionTypes.CLEAR_CART:\r\n            return{\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}