{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger'; // Awesome for debugging our redux code\n\nimport { persistStore } from 'redux-persist'; // It allows our browser to cache our app to store info\n//import thunk from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root-reducer';\nimport rootSaga from './root.saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  // INSIDE OF NODE, THERE IS A ENVIROMENT VARIABLE. It's already configured when we create a react app\n  middlewares.push(logger);\n} // Spread in all of the methods or all of the values in this array [logger] into the function as arguments\n\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store); // Basically says that our STORE is now an element persisted\n\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["D:/Repositorios/React--Zero-To-Mastery/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAAmC;;AACnC,SAASC,YAAT,QAA6B,eAA7B,C,CAA8C;AAC9C;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA2C;AAAE;AACzCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH,C,CAED;;;AACA,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B,C,CAAuC;;AAE9C,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger'; // Awesome for debugging our redux code\r\nimport { persistStore } from 'redux-persist'; // It allows our browser to cache our app to store info\r\n//import thunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './root-reducer';\r\nimport rootSaga from './root.saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development'){ // INSIDE OF NODE, THERE IS A ENVIROMENT VARIABLE. It's already configured when we create a react app\r\n    middlewares.push(logger);\r\n}\r\n\r\n// Spread in all of the methods or all of the values in this array [logger] into the function as arguments\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store); // Basically says that our STORE is now an element persisted\r\n\r\nexport default { store, persistor };"]},"metadata":{},"sourceType":"module"}