{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Repositorios\\\\React--Zero-To-Mastery\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\with-spinner\\\\with-spinner.component.jsx\";\nimport React from 'react';\nimport Spinner from '../spinner/spinner.component';\n/*const WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? (\r\n        <SpinnerOverlay>\r\n            <SpinnerContainer />\r\n        </SpinnerOverlay>\r\n    ) : (\r\n        <WrappedComponent {...otherProps} />\r\n    )\r\n}*/\n\nconst WithSpinner = WrappedComponent => ({\n  isLoading,\n  ...otherProps\n}) => {\n  return isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(WrappedComponent, { ...otherProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["D:/Repositorios/React--Zero-To-Mastery/crwn-clothing/client/src/components/with-spinner/with-spinner.component.jsx"],"names":["React","Spinner","WithSpinner","WrappedComponent","isLoading","otherProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,8BAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAGC,gBAAgB,IAAI,CAAC;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,KAAkC;AAClE,SAAOD,SAAS,gBACZ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADY,gBAGZ,QAAC,gBAAD,OAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA,UAHJ;AAKP,CAND;;AAQA,eAAeH,WAAf","sourcesContent":["import React from 'react';\r\n\r\nimport Spinner from '../spinner/spinner.component';\r\n\r\n/*const WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? (\r\n        <SpinnerOverlay>\r\n            <SpinnerContainer />\r\n        </SpinnerOverlay>\r\n    ) : (\r\n        <WrappedComponent {...otherProps} />\r\n    )\r\n}*/\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n        return isLoading ? (\r\n            <Spinner />\r\n        ) : (\r\n            <WrappedComponent {...otherProps} />\r\n        );\r\n};\r\n\r\nexport default WithSpinner;"]},"metadata":{},"sourceType":"module"}