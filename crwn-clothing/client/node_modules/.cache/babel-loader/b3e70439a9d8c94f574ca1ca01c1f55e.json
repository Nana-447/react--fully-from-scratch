{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find( // Using find function to verify the condition of an array\n  cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } // Adding a new item and its quantity\n    : cartItem);\n  }\n\n  ;\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }]; // If it's not the same, it adds the new value to the array on the second parameter\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id); // If it's the last quantity of the product\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  } // If it's diferent than 1\n\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? // If the id's are the same\n  { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } // subtracts 1 item from cartItem quantity\n  : cartItem // only the cartItem returns\n  );\n};","map":{"version":3,"sources":["D:/Repositorios/React--Zero-To-Mastery/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,EAAgB;AACrCC,EAAAA,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADrB,CAAzB;;AAIA,MAAIH,gBAAJ,EAAqB;AACjB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACM,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADN,CACuD;AADvD,MAEMH,QAHH,CAAP;AAKH;;AAAA;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP,CAbuD,CAaE;AAC5D,CAdM;AAgBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAC/D,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EADxB,CAAzB,CAD+D,CAK/D;;AACA,MAAIH,gBAAgB,CAACK,QAAjB,KAA8B,CAAlC,EAAoC;AAChC,WAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA9D,CAAP;AACH,GAR8D,CAU/D;;;AACA,SAAOL,SAAS,CAACM,GAAV,CACHF,QAAQ,IACRA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GAAsC;AACtC,IAAE,GAAGD,QAAL;AAAeG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,GADA,CACgD;AADhD,IAEEH,QAJC,CAIQ;AAJR,GAAP;AAMH,CAjBM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\r\n    const existingCartItem = cartItems.find( // Using find function to verify the condition of an array\r\n        cartItem => cartItem.id === cartItemToAdd.id \r\n    );\r\n\r\n    if (existingCartItem){\r\n        return cartItems.map(cartItem => \r\n            cartItem.id === cartItemToAdd.id\r\n                ? { ...cartItem, quantity: cartItem.quantity + 1 } // Adding a new item and its quantity\r\n                : cartItem\r\n            )\r\n    };\r\n\r\n    return [...cartItems, { ...cartItemToAdd, quantity: 1 }] // If it's not the same, it adds the new value to the array on the second parameter\r\n}\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n    const existingCartItem = cartItems.find(\r\n        cartItem => cartItem.id === cartItemToRemove.id\r\n    );\r\n    \r\n    // If it's the last quantity of the product\r\n    if (existingCartItem.quantity === 1){\r\n        return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\r\n    }\r\n    \r\n    // If it's diferent than 1\r\n    return cartItems.map(\r\n        cartItem =>\r\n        cartItem.id === cartItemToRemove.id ? // If the id's are the same\r\n        { ...cartItem, quantity: cartItem.quantity - 1} // subtracts 1 item from cartItem quantity\r\n        : cartItem // only the cartItem returns\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}